# README: How to Run the Middleware (Node.js)

## Steps to Set Up and Run the Middleware

### Prerequisites
- Node.js installed (version 16 or higher recommended)
- npm installed (comes with Node.js)

### 1. Clone the Repository
```bash
git clone <repository-url>
cd <repository-folder>
```

### 2. Switch to the `laya_mvc` Branch
To ensure you're working on the latest middleware codebase, switch to the `laya_mvc` branch:
```bash
git checkout laya_mvc
git pull origin laya_mvc
```

### 3. Create Your Own Branch
To avoid making changes to the `laya_mvc` branch, create and switch to your own branch:
```bash
git checkout -b <your-branch-name>
```
Replace `<your-branch-name>` with your desired branch name (e.g., `middleware-feature-xyz`).

### 4. Install Dependencies
Navigate to the middleware directory (if not already in the root of the project) and install the required npm packages:
```bash
npm install
```

### 5. Start the Middleware Server
Run the middleware server:
```bash
node server.js
```

This will start the middleware server, typically at `APIClient`. You can configure the port in the `server.js` file if needed.

### 6. Make Changes in Your Branch
You can now make any changes to the middleware in your own branch. Ensure you do **not** make any changes directly to the `laya_mvc` branch.

### 7. Save Your Changes and Commit
After making your changes, add and commit your work:
```bash
git add .
git commit -m "Your descriptive commit message"
```

### 8. Push Your Changes to Your Branch
Push your branch to the repository:
```bash
git push origin <your-branch-name>
```

### 9. Testing Your Middleware
Ensure your changes work correctly by thoroughly testing API endpoints and middleware functionality. Use tools like Postman or curl to verify the endpoints.

### 10. Do **Not** Push Directly to `laya_mvc`
Remember, **do not push directly to the `laya_mvc` branch**. Always create and work in your own branch.

---

### Helpful Git Commands
- **Switch to a branch**:
  ```bash
  git checkout <branch-name>
  ```
- **Pull the latest changes in your branch**:
  ```bash
  git pull origin <your-branch-name>
  ```
- **Fetch and list all branches**:
  ```bash
  git fetch --all
  git branch -a
  ```

---

If you encounter any issues or need assistance, reach out to the repository owner for clarification. Follow the branching policy strictly to maintain code integrity in the `laya_mvc` branch.


# README: How to Run the Middleware (Python)

## Steps to Set Up and Run the Middleware

### Prerequisites
- Python 3.8 or higher installed
- `pip` (Python package installer) installed

### 1. Clone the Repository
```bash
git clone <repository-url>
cd <repository-folder>
```

### 2. Switch to the `laya_mvc` Branch
Ensure you are working on the correct branch:
```bash
git checkout laya_mvc
git pull origin laya_mvc
```

### 3. Create Your Own Branch
To avoid making changes to the `laya_mvc` branch, create and switch to your own branch:
```bash
git checkout -b <your-branch-name>
```
Replace `<your-branch-name>` with your desired branch name (e.g., `python-feature-xyz`).

### 4. Set Up a Virtual Environment (Optional but Recommended)
Create and activate a virtual environment to isolate dependencies:
```bash
python3 -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
```

### 5. Install Dependencies
Install the required Python packages listed in `requirements.txt`:
```bash
pip install -r requirements.txt
```

### 6. Start the Middleware Server
Run the middleware server:
```bash
python app.py
```

This will start the middleware server, typically at `http://localhost:5000`. You can configure the port in the `app.py` file if needed.

### 7. Make Changes in Your Branch
You can now make any changes to the middleware in your own branch. Ensure you do **not** make any changes directly to the `laya_mvc` branch.

### 8. Save Your Changes and Commit
After making your changes, add and commit your work:
```bash
git add .
git commit -m "Your descriptive commit message"
```

### 9. Push Your Changes to Your Branch
Push your branch to the repository:
```bash
git push origin <your-branch-name>
```

### 10. Testing Your Middleware
Ensure your changes work correctly by thoroughly testing API endpoints and middleware functionality. Use tools like Postman or curl to verify the endpoints.

### 11. Do **Not** Push Directly to `laya_mvc`
Remember, **do not push directly to the `laya_mvc` branch**. Always create and work in your own branch.

---

### Helpful Git Commands
- **Switch to a branch**:
  ```bash
  git checkout <branch-name>
  ```
- **Pull the latest changes in your branch**:
  ```bash
  git pull origin <your-branch-name>
  ```
- **Fetch and list all branches**:
  ```bash
  git fetch --all
  git branch -a
  ```

---

If you encounter any issues or need assistance, reach out to the repository owner for clarification. Follow the branching policy strictly to maintain code integrity in the `laya_mvc` branch.